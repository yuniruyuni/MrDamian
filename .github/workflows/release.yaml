name: release
on: [push]

jobs:
  check:
    name: check
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: check version diff
        id: check
        run: |
          if [ "`git diff HEAD HEAD^ package.json | grep version`" ]; then
            version=$(cat package.json | jq -r .version)
            echo "release version: $version"
            echo "version=$version" >> $GITHUB_OUTPUT
          fi
    outputs:
      version: ${{ steps.check.outputs.version }}

  github-release:
    needs: check
    if: needs.check.outputs.version != ''
    name: github-release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2

      - run: bun install
      - run: bun run build

      - name: create archives
        run: |
          cd package/
          tar czvf linux-arm64.tar.gz linux-arm64
          tar czvf linux-x64.tar.gz linux-x64
          zip -r windows-x64.zip windows-x64
          zip -r mac-arm64.zip mac-arm64
          zip -r mac-x64.zip mac-x64

      - name: create release
        run: |
          gh release create v${{ needs.check.outputs.version }} \
            package/*.tar.gz \
            package/*.zip

  npm-release:
    needs: check
    if: needs.check.outputs.version != ''
    name: npm-release
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - uses: actions/setup-node@v4
        with:
          node-version: '20.14.0'
          registry-url: 'https://registry.npmjs.org'
      - run: bun install
      - name: publish npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}